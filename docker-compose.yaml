# docker-compose.yaml

version: '3.9'
services:
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - ./dockerdata/redis:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30

  postgres:
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=ecommerce
      - POSTGRES_USER=postgres
    image: postgres:14
    container_name: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./dockerdata/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  web:
    image: nginx
    container_name: web
    ports:
      - "80:80"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./dockerdata/web:/usr/share/nginx/html
    restart: always
    depends_on:
      - frontend
      - api

  frontend:
    build:
      context: ./ecommerce_app
      dockerfile: Dockerfile
    environment:
    - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./ecommerce_app/src:/app/src
    ports:
      - "3000:3000"

  api:
    build:
      context: ./ecommerce_api
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=ecommerce
      - POSTGRES_USER=postgres
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - REDIS_HOST=redis
    volumes:
      - ./ecommerce_api:/app
    expose:
      - 5000
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
